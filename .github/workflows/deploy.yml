name: Deploy with Kamal

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.sha }}
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.DOCR_TOKEN_SECRET }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install dependencies
        run: |
          bundle config set without 'development test'
          bundle install --jobs 4 --retry 3

      - name: Docker login to DOCR (Registry Token)
        env:
          DOCR_TOKEN_USERNAME: ${{ secrets.DOCR_TOKEN_USERNAME }}
          DOCR_TOKEN_SECRET: ${{ secrets.DOCR_TOKEN_SECRET }}
        run: |
          echo "$DOCR_TOKEN_SECRET" | docker login registry.digitalocean.com -u "$DOCR_TOKEN_USERNAME" --password-stdin

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Refresh known_hosts for droplet
        run: |
          mkdir -p ~/.ssh
          # 移除旧指纹（忽略未找到的情况）
          ssh-keygen -R "$SSH_HOST" || true
          # 拉取并写入最新指纹（ed25519；5秒超时）
          ssh-keyscan -T 5 -t ed25519 -H "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Kamal build
        run: |
          bundle exec kamal build --version "$VERSION"

      - name: Kamal deploy
        run: |
          bundle exec kamal deploy --version "$VERSION"
      - name: Dump logs on failure
        if: failure()
        run: |
          bundle exec kamal logs || true
          bundle exec kamal app exec --reuse "tail -n 200 log/production.log" || true